/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.75
 * Generated at: 2023-10-24 11:16:48 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.admin.goods;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class adminGoodsMain_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(3);
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1695776512350L));
    _jspx_dependants.put("jar:file:/C:/Users/hotjy/Documents/sun-master/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/sun/WEB-INF/lib/jstl-1.2.jar!/META-INF/fn.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("jar:file:/C:/Users/hotjy/Documents/sun-master/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/sun/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fchoose;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fotherwise;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fchoose = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fotherwise = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.release();
    _005fjspx_005ftagPool_005fc_005fchoose.release();
    _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.release();
    _005fjspx_005ftagPool_005fc_005fotherwise.release();
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      if (_jspx_meth_c_005fset_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<div class=\"container\">\r\n");
      out.write("	<div class=\"row ms-5 ps-5\">\r\n");
      out.write("		<div class=\"mt-5 p-0 ps-5 align-items-center\">\r\n");
      out.write("			<div class=\"ps-4\">\r\n");
      out.write("				<p class=\"fs-5 fw-bold mb-2\">상품관리</p>\r\n");
      out.write("				<div class=\"d-flex align-items-center gap-1 justify-content-between\">\r\n");
      out.write("					<div>\r\n");
      out.write("\r\n");
      out.write("						<!-- 검색 - 오늘 -->\r\n");
      out.write("						<a href=\"javascript:search_order_history('today')\"\r\n");
      out.write("							class=\"badge rounded-pill btn mb-2 rounded-0 border-main samll \">오늘</a>\r\n");
      out.write("\r\n");
      out.write("						<!-- 검색 - 1개월 -->\r\n");
      out.write("						<a href=\"javascript:search_order_history('one_month')\"\r\n");
      out.write("							class=\"badge rounded-pill btn mb-2 rounded-0 border-main samll active\">최근\r\n");
      out.write("							1개월</a>\r\n");
      out.write("\r\n");
      out.write("						<!-- 검색 - 2개월 -->\r\n");
      out.write("						<a href=\"javascript:search_order_history('two_month')\"\r\n");
      out.write("							class=\"badge rounded-pill btn mb-2 rounded-0 border-main samll two_month\">최근\r\n");
      out.write("							2개월</a>\r\n");
      out.write("\r\n");
      out.write("						<!-- 검색 - 3개월 -->\r\n");
      out.write("						<a href=\"javascript:search_order_history('three_month')\"\r\n");
      out.write("							class=\"badge rounded-pill btn mb-2 rounded-0 border-main samll three_month\">최근\r\n");
      out.write("							3개월 </a>\r\n");
      out.write("\r\n");
      out.write("						<!-- 검색 - 6개월 -->\r\n");
      out.write("						<a href=\"javascript:search_order_history('six_month')\"\r\n");
      out.write("							class=\"badge rounded-pill btn mb-2 rounded-0 border-main samll six_month\">최근\r\n");
      out.write("							6개월</a>\r\n");
      out.write("\r\n");
      out.write("					</div>\r\n");
      out.write("					\r\n");
      out.write("					\r\n");
      out.write("					<!-- 추가하기 -->\r\n");
      out.write("					<div>\r\n");
      out.write("						<button type=\"button\"\r\n");
      out.write("							class=\"btn btn-main rounded-0 fw-bold p-2 ms-3 flex-fill fs-08\"\r\n");
      out.write("							style=\"width: 300px;\" onClick=\"showNewGoods()\">추가하기</button>\r\n");
      out.write("					</div>\r\n");
      out.write("					<!-- 추가하기 -->\r\n");
      out.write("					\r\n");
      out.write("				</div>\r\n");
      out.write("\r\n");
      out.write("<!-- 상품정보 표시 영역 -->\r\n");
      out.write("				<div class=\"border-top border-main border-2 mt-2\"></div>\r\n");
      out.write("				<div class=\"table-responsive mt-4\">\r\n");
      out.write("					<table class=\"table border-top mb-0 small fw-light border-bottom\">\r\n");
      out.write("						<tbody>\r\n");
      out.write("\r\n");
      out.write("							<!-- thead -->\r\n");
      out.write("							<tr>\r\n");
      out.write("								<td\r\n");
      out.write("									class=\"table-light p-2 align-middle fw-bold border-end text-center samll\"\r\n");
      out.write("									style=\"width: 45px;\">상품번호</td>\r\n");
      out.write("								<td\r\n");
      out.write("									class=\"table-light ps-4 align-middle fw-bold text-center border-end\">상품정보</td>\r\n");
      out.write("								<td\r\n");
      out.write("									class=\"table-light ps-4 align-middle fw-bold text-center border-end\">상품이미지</td>\r\n");
      out.write("								<td\r\n");
      out.write("									class=\"table-light align-middle fw-bold text-center border-end\"\r\n");
      out.write("									style=\"width: 114px;\">등록일</td>\r\n");
      out.write("								<td class=\"table-light text-center px-4 align-middle\"\r\n");
      out.write("									style=\"width: 114px;\">-</td>\r\n");
      out.write("							</tr>\r\n");
      out.write("							<!-- thead -->\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("							<!-- 상품추가, showNewGoods할경우 show됨. -->\r\n");
      out.write("							<form action=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/admin/goods/addNewGoods.do\" method=\"post\" enctype=\"multipart/form-data\">\r\n");
      out.write("								\r\n");
      out.write("								<tr class=\"d-none newGoods bg-primary-subtle \">\r\n");
      out.write("\r\n");
      out.write("									<!-- 상품번호, 표시하지않음 -->\r\n");
      out.write("									<td\r\n");
      out.write("										class=\"p-2 align-middle fw-bold border-end text-center samll\"\r\n");
      out.write("										style=\"width: 45px;\">-</td>\r\n");
      out.write("									<!-- 상품번호, 표시하지않음 -->\r\n");
      out.write("\r\n");
      out.write("									<td class=\"border-end align-middle\">\r\n");
      out.write("\r\n");
      out.write("										<div class=\"d-flex mb-1 align-items-center\">\r\n");
      out.write("											<span style=\"width: 100px;\" class=\"\">카테고리</span> \r\n");
      out.write("											\r\n");
      out.write("											<!-- select 선택시 input에 selected value가 공유됨 selectValue() -->\r\n");
      out.write("											<select\r\n");
      out.write("												name=\"\" id=\"\" onchange=\"selectValue(this, this.value)\"\r\n");
      out.write("												class=\"form-select rounded-0 flex-inherit text-start small border border-end\">\r\n");
      out.write("												<option value=\"과일\" selected>과일</option>\r\n");
      out.write("												<option value=\"곡류\">곡류</option>\r\n");
      out.write("												<option value=\"채소\">채소</option>\r\n");
      out.write("												<option value=\"버섯\">버섯</option>\r\n");
      out.write("											</select> \r\n");
      out.write("											<!-- 초기선택값 과일 -->\r\n");
      out.write("											<input type=\"hidden\" name=\"goods_sort\" id=\"goods_sort\"\r\n");
      out.write("												value=\"과일\">\r\n");
      out.write("											<!-- select 선택시 input에 selected value가 공유됨 selectValue() -->\r\n");
      out.write("											\r\n");
      out.write("										</div>\r\n");
      out.write("										\r\n");
      out.write("										<!-- 상품이름 -->\r\n");
      out.write("										<div class=\"d-flex mb-1 align-items-center\">\r\n");
      out.write("											<span style=\"width: 100px;\" class=\"\">상품이름</span> \r\n");
      out.write("											<input\r\n");
      out.write("												class=\"form-control rounded-0\" type=\"text\"\r\n");
      out.write("												placeholder=\"상품이름\" value=\"\" name=\"goods_title\">\r\n");
      out.write("										</div>\r\n");
      out.write("										<!-- 상품이름 -->\r\n");
      out.write("										\r\n");
      out.write("										<!-- 상품가격 -->\r\n");
      out.write("										<div class=\"d-flex mb-0 align-items-center\">\r\n");
      out.write("											<span style=\"width: 100px;\" class=\"\">상품가격</span> <input\r\n");
      out.write("												class=\"form-control rounded-0\" name=\"goods_price\"\r\n");
      out.write("												type=\"text\" placeholder=\"상품가격\" value=\"\">\r\n");
      out.write("										</div>\r\n");
      out.write("										<!-- 상품가격 -->\r\n");
      out.write("\r\n");
      out.write("									</td>\r\n");
      out.write("									<td class=\"border-end align-middle\">\r\n");
      out.write("										<div class=\"d-flex mb-1 align-items-center\">\r\n");
      out.write("											<span style=\"width: 100px;\" class=\"\">상품이미지</span>\r\n");
      out.write("											<div class=\"input-group\">\r\n");
      out.write("\r\n");
      out.write("												<!-- 메인 이미지 업로드 -->\r\n");
      out.write("												<!-- filesToFackFilesInput, 본래 file input은 placeholder등을지정할 수 없는 이유로 hidden, -->\r\n");
      out.write("												<!-- label로 연결된 input으로 file value값을 반영해 사용자에게 알림. -->\r\n");
      out.write("												<label onClick=\"filesToFackFilesInput(this)\"\r\n");
      out.write("													class=\"d-flex w-100 filesToFackFilesInput\"> <input\r\n");
      out.write("													name='main_image' class=\"file_real d-none\"\r\n");
      out.write("													id=\"f_main_image\" type=\"file\" style=\"opacity: .5\">\r\n");
      out.write("\r\n");
      out.write("													<span>파일선택</span> <input name='main_image_fake'\r\n");
      out.write("													class=\"file_fake form-control rounded-0\" type=\"text\"\r\n");
      out.write("													placeholder=\"main.png로 변경후 업로드해주세요.\" readonly tabindex=\"-1\">\r\n");
      out.write("\r\n");
      out.write("												</label>\r\n");
      out.write("												<!-- label로 연결된 input으로 file value값을 반영해 사용자에게 알림. -->\r\n");
      out.write("												<!-- 메인 이미지 업로드 -->\r\n");
      out.write("												\r\n");
      out.write("											</div>\r\n");
      out.write("										</div>\r\n");
      out.write("										<div class=\"d-flex mb-1 align-items-center\">\r\n");
      out.write("											<span style=\"width: 100px;\" class=\"\">상세이미지</span>\r\n");
      out.write("											<div class=\"input-group\">\r\n");
      out.write("												<!-- 상세 이미지 업로드 -->\r\n");
      out.write("												<!-- filesToFackFilesInput, 본래 file input은 placeholder등을지정할 수 없는 이유로 hidden, -->\r\n");
      out.write("												<!-- label로 연결된 input으로 file value값을 반영해 사용자에게 알림. -->\r\n");
      out.write("												<label onClick=\"filesToFackFilesInput(this)\"\r\n");
      out.write("													class=\"d-flex w-100 filesToFackFilesInput\"> <input\r\n");
      out.write("													name='detail_image1' class=\"file_real d-none\"\r\n");
      out.write("													id=\"f_main_image\" type=\"file\" style=\"opacity: .5\">\r\n");
      out.write("													<span>파일선택</span> \r\n");
      out.write("													\r\n");
      out.write("													<input name='detail_image1_fake'\r\n");
      out.write("													class=\"file_fake form-control rounded-0\" type=\"text\"\r\n");
      out.write("													placeholder=\"detail1.png로 변경후 업로드해주세요.\" readonly\r\n");
      out.write("													tabindex=\"-1\">\r\n");
      out.write("												</label>\r\n");
      out.write("												<!-- label로 연결된 input으로 file value값을 반영해 사용자에게 알림. -->\r\n");
      out.write("												<!-- 상세 이미지 업로드 -->\r\n");
      out.write("											</div>\r\n");
      out.write("										</div>\r\n");
      out.write("										<div class=\"d-flex mb-0 align-items-center\">\r\n");
      out.write("											<span style=\"width: 100px;\" class=\"\"></span>\r\n");
      out.write("											<div class=\"input-group\">\r\n");
      out.write("\r\n");
      out.write("												<!-- 상세 이미지 업로드 -->\r\n");
      out.write("												<!-- filesToFackFilesInput, 본래 file input은 placeholder등을지정할 수 없는 이유로 hidden, -->\r\n");
      out.write("												<!-- label로 연결된 input으로 file value값을 반영해 사용자에게 알림. -->\r\n");
      out.write("												<label onClick=\"filesToFackFilesInput(this)\"\r\n");
      out.write("													class=\"d-flex w-100 filesToFackFilesInput\"> <input\r\n");
      out.write("													name='detail_image2' class=\"file_real d-none\"\r\n");
      out.write("													id=\"f_main_image\" type=\"file\" style=\"opacity: .5\">\r\n");
      out.write("													<span>파일선택</span> \r\n");
      out.write("													\r\n");
      out.write("													<input name='detail_image2_fake'\r\n");
      out.write("													class=\"file_fake form-control rounded-0\" type=\"text\"\r\n");
      out.write("													placeholder=\"detail2.png로 변경후 업로드해주세요.\" readonly\r\n");
      out.write("													tabindex=\"-1\">\r\n");
      out.write("												</label>\r\n");
      out.write("												<!-- label로 연결된 input으로 file value값을 반영해 사용자에게 알림. -->\r\n");
      out.write("												<!-- 상세 이미지 업로드 -->\r\n");
      out.write("\r\n");
      out.write("											</div>\r\n");
      out.write("										</div>\r\n");
      out.write("\r\n");
      out.write("									</td>\r\n");
      out.write("									\r\n");
      out.write("									<!-- 등록일, 표시하지않음 -->\r\n");
      out.write("									<td class=\"border-end align-middle text-center\">-</td>\r\n");
      out.write("									<!-- 등록일, 표시하지않음 -->\r\n");
      out.write("									\r\n");
      out.write("									\r\n");
      out.write("									<!-- 추가하기 -->\r\n");
      out.write("									<td class=\"align-middle\">\r\n");
      out.write("										<button class=\"w-100 btn border-main small rounded-0 samll mb-2\"\r\n");
      out.write("											type=\"button\" onClick=\"fn_add_new_goods(this.form)\">추가</button>\r\n");
      out.write("									</td>\r\n");
      out.write("									<!-- 추가하기 -->\r\n");
      out.write("									\r\n");
      out.write("								</tr>\r\n");
      out.write("							</form>\r\n");
      out.write("							<!-- 상품추가, showNewGoods할경우 show됨. -->\r\n");
      out.write("\r\n");
      out.write("							");
      if (_jspx_meth_c_005fchoose_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("						</tbody>\r\n");
      out.write("					</table>\r\n");
      out.write("				</div>\r\n");
      out.write("<!-- 상품정보 표시 영역 -->\r\n");
      out.write("\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("\r\n");
      out.write("//이미지 이름체크\r\n");
      out.write("function filesToFackFilesInput(label){\r\n");
      out.write("	let file_real = label.children[0];\r\n");
      out.write("	let file_fake = label.children[2];\r\n");
      out.write("	\r\n");
      out.write("	//file input file_real이 change할때\r\n");
      out.write("	file_real.addEventListener(\"change\", function () {\r\n");
      out.write("		\r\n");
      out.write("		//name값에 따른 파일이름을 가져와 대조한다.\r\n");
      out.write("		let files = this.files[0].name;\r\n");
      out.write("		if(\r\n");
      out.write("			(file_fake.name == \"main_image_fake\") && (files == \"main.png\")||\r\n");
      out.write("		    (file_fake.name == \"detail_image1_fake\") && (files == \"detail1.png\")||\r\n");
      out.write("			(file_fake.name == \"detail_image2_fake\") && (files == \"detail2.png\")){\r\n");
      out.write("			//정해진 파일이름으로 업로드했을때 value값을 반영하고\r\n");
      out.write("			file_fake.value = files;\r\n");
      out.write("		}else{\r\n");
      out.write("			//그렇지않은경우 null을 반영 + label의 style을 바꾸어 경고한다.\r\n");
      out.write("			file_fake.value = null;\r\n");
      out.write("			label.classList.add(\"warn\");\r\n");
      out.write("		}\r\n");
      out.write("	});\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("//상품 추가하기 버튼을 누를 경우, newGoods tr의 class d-none가 remove되며 나타난다.\r\n");
      out.write("function showNewGoods(){\r\n");
      out.write("	const newGoods = document.querySelector(\".newGoods\");\r\n");
      out.write("	newGoods.classList.remove(\"d-none\");\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("//selectBox가 selected되면 그다음 요소 input에게 그 value가 반영된다.\r\n");
      out.write("function selectValue(selectBox, value){\r\n");
      out.write("	var input = selectBox.nextElementSibling\r\n");
      out.write("	input.setAttribute(\"value\", value);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("//로드시 상품목록을 가져올때 input값에 따라 selectbox의 option이 select된다. \r\n");
      out.write("var cart_goods_qty_inputs = document.getElementsByName(\"goods_sort\");\r\n");
      out.write("//전체 goods_sort 리스트를 돌려\r\n");
      out.write("cart_goods_qty_inputs.forEach((cart_goods_qty_inputs) => {\r\n");
      out.write("	let inputValue = cart_goods_qty_inputs.value;\r\n");
      out.write("	//이전형제요소 select 요소를 잡고\r\n");
      out.write("	let selectBox = cart_goods_qty_inputs.previousElementSibling;\r\n");
      out.write("	let selectBox_len = selectBox.options.length;\r\n");
      out.write("	//해당 select의 리스트 길이 만큼 돌리며 input값과 대조한다.\r\n");
      out.write("	for (let i=0; i<selectBox_len; i++){  \r\n");
      out.write("		if(selectBox.options[i].value == inputValue){\r\n");
      out.write("			//일치할경우 selected true\r\n");
      out.write("			selectBox.options[i].selected = true;\r\n");
      out.write("		}\r\n");
      out.write("	}\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("//상품추가\r\n");
      out.write("function fn_add_new_goods(obj){\r\n");
      out.write("	const fileName = document.querySelector(\"#f_main_image\").value;\r\n");
      out.write("	//f_main_image의 value가 없으면 submit되지않으며, 경고한다.\r\n");
      out.write("	 if(fileName != null && fileName != undefined){\r\n");
      out.write("		 obj.submit();\r\n");
      out.write("	 }else{alert(\"메인 이미지는 반드시 첨부해야 합니다.\");return;}\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("//getContextPath \r\n");
      out.write("//comfirm의 결과값에 따른 action을 하기 위해 contextPath를 구해봤다. - (상품삭제)\r\n");
      out.write("function getContextPath() {\r\n");
      out.write("	var hostIndex = location.href.indexOf( location.host ) + location.host.length;\r\n");
      out.write("	return location.href.substring( hostIndex, location.href.indexOf('/', hostIndex + 1) );\r\n");
      out.write("};\r\n");
      out.write("\r\n");
      out.write("//상품삭제\r\n");
      out.write("function deleteGoods(goods_id){\r\n");
      out.write("	var url = getContextPath();\r\n");
      out.write("	url += \"/admin/goods/deleteGoods.do?goods_id=\"+goods_id;\r\n");
      out.write("	//confirm단계를 거치고 사용자가 취소를 누를경우 삭제를 취소한다.\r\n");
      out.write("	 if (!confirm(\"삭제하시겠습니까?\")) {\r\n");
      out.write("	    } else {\r\n");
      out.write("	    	//사용자가 확인을 눌렀을 경우 goods_id값과 함께 deleteGoods로 이동한다.\r\n");
      out.write("	    	location.href=url;\r\n");
      out.write("	    }\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("//버튼식 상품조회\r\n");
      out.write("//onclick할때 같이 가져오는 fixedSearchPeriod값과함께 adminGoodsMain 재요청\r\n");
      out.write("//해당 값은 자바소스를 거쳐 지정된 기간에 맞는 정보만 select되어 뿌려진다.\r\n");
      out.write("function search_order_history(fixedSearchPeriod) {\r\n");
      out.write("	var formObj = document.createElement(\"form\");\r\n");
      out.write("	var i_fixedSearch_period = document.createElement(\"input\");\r\n");
      out.write("	i_fixedSearch_period.name = \"fixedSearchPeriod\";\r\n");
      out.write("	i_fixedSearch_period.value = fixedSearchPeriod;\r\n");
      out.write("	formObj.appendChild(i_fixedSearch_period);\r\n");
      out.write("	document.body.appendChild(formObj);\r\n");
      out.write("	formObj.method = \"get\";\r\n");
      out.write("	formObj.action = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/admin/goods/adminGoodsMain.do\";\r\n");
      out.write("	formObj.submit();\r\n");
      out.write("}\r\n");
      out.write("				\r\n");
      out.write("//버튼식 상품조회 badge url에 따른 style변경\r\n");
      out.write("if (window.location.href.includes(\"fixedSearchPeriod\")) {\r\n");
      out.write("	const badges = document.querySelectorAll(\".badge\");\r\n");
      out.write("	for (b of badges){ \r\n");
      out.write("		b.classList.remove(\"active\");\r\n");
      out.write("		}\r\n");
      out.write("	//각 값이 url에 들어있을 경우 active된다.\r\n");
      out.write("	if (window.location.href.includes(\"today\")) {badges[0].classList.add(\"active\");\r\n");
      out.write("	} else if (window.location.href.includes(\"one_month\")) {badges[1].classList.add(\"active\");\r\n");
      out.write("	}else if (window.location.href.includes(\"two_month\")) {badges[2].classList.add(\"active\");\r\n");
      out.write("	}else if (window.location.href.includes(\"three_month\")) {badges[3].classList.add(\"active\");\r\n");
      out.write("	}else if (window.location.href.includes(\"six_month\")) {badges[4].classList.add(\"active\");\r\n");
      out.write("	}\r\n");
      out.write("}\r\n");
      out.write("				\r\n");
      out.write("</script>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fset_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:set
    org.apache.taglibs.standard.tag.rt.core.SetTag _jspx_th_c_005fset_005f0 = (org.apache.taglibs.standard.tag.rt.core.SetTag) _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.SetTag.class);
    boolean _jspx_th_c_005fset_005f0_reused = false;
    try {
      _jspx_th_c_005fset_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fset_005f0.setParent(null);
      // /WEB-INF/views/admin/goods/adminGoodsMain.jsp(5,0) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f0.setVar("contextPath");
      // /WEB-INF/views/admin/goods/adminGoodsMain.jsp(5,0) name = value type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f0.setValue(new org.apache.jasper.el.JspValueExpression("/WEB-INF/views/admin/goods/adminGoodsMain.jsp(5,0) '${pageContext.request.contextPath}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${pageContext.request.contextPath}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      int _jspx_eval_c_005fset_005f0 = _jspx_th_c_005fset_005f0.doStartTag();
      if (_jspx_th_c_005fset_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.reuse(_jspx_th_c_005fset_005f0);
      _jspx_th_c_005fset_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fset_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fset_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fchoose_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:choose
    org.apache.taglibs.standard.tag.common.core.ChooseTag _jspx_th_c_005fchoose_005f0 = (org.apache.taglibs.standard.tag.common.core.ChooseTag) _005fjspx_005ftagPool_005fc_005fchoose.get(org.apache.taglibs.standard.tag.common.core.ChooseTag.class);
    boolean _jspx_th_c_005fchoose_005f0_reused = false;
    try {
      _jspx_th_c_005fchoose_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fchoose_005f0.setParent(null);
      int _jspx_eval_c_005fchoose_005f0 = _jspx_th_c_005fchoose_005f0.doStartTag();
      if (_jspx_eval_c_005fchoose_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("								");
          if (_jspx_meth_c_005fwhen_005f0(_jspx_th_c_005fchoose_005f0, _jspx_page_context))
            return true;
          out.write("\r\n");
          out.write("								");
          if (_jspx_meth_c_005fotherwise_005f0(_jspx_th_c_005fchoose_005f0, _jspx_page_context))
            return true;
          out.write("\r\n");
          out.write("							");
          int evalDoAfterBody = _jspx_th_c_005fchoose_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fchoose_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fchoose.reuse(_jspx_th_c_005fchoose_005f0);
      _jspx_th_c_005fchoose_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fchoose_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fchoose_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fwhen_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:when
    org.apache.taglibs.standard.tag.rt.core.WhenTag _jspx_th_c_005fwhen_005f0 = (org.apache.taglibs.standard.tag.rt.core.WhenTag) _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.WhenTag.class);
    boolean _jspx_th_c_005fwhen_005f0_reused = false;
    try {
      _jspx_th_c_005fwhen_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fwhen_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f0);
      // /WEB-INF/views/admin/goods/adminGoodsMain.jsp(214,8) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fwhen_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${empty newGoodsList }", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fwhen_005f0 = _jspx_th_c_005fwhen_005f0.doStartTag();
      if (_jspx_eval_c_005fwhen_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("\r\n");
          out.write("									<!-- 조회된 상품이 없을경우 -->\r\n");
          out.write("									<tr>\r\n");
          out.write("										<td colspan=\"5\">\r\n");
          out.write("											<div class=\"p-4\">\r\n");
          out.write("												<p class=\"my-5 text-center\">조회된 상품이 없습니다.</p>\r\n");
          out.write("											</div>\r\n");
          out.write("										</td>\r\n");
          out.write("									</tr>\r\n");
          out.write("									<!-- 조회된 상품이 없을경우 -->\r\n");
          out.write("\r\n");
          out.write("								");
          int evalDoAfterBody = _jspx_th_c_005fwhen_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fwhen_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.reuse(_jspx_th_c_005fwhen_005f0);
      _jspx_th_c_005fwhen_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fwhen_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fwhen_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fotherwise_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:otherwise
    org.apache.taglibs.standard.tag.common.core.OtherwiseTag _jspx_th_c_005fotherwise_005f0 = (org.apache.taglibs.standard.tag.common.core.OtherwiseTag) _005fjspx_005ftagPool_005fc_005fotherwise.get(org.apache.taglibs.standard.tag.common.core.OtherwiseTag.class);
    boolean _jspx_th_c_005fotherwise_005f0_reused = false;
    try {
      _jspx_th_c_005fotherwise_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fotherwise_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f0);
      int _jspx_eval_c_005fotherwise_005f0 = _jspx_th_c_005fotherwise_005f0.doStartTag();
      if (_jspx_eval_c_005fotherwise_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("								\r\n");
          out.write("								<!-- 상품리스트, newGoodsList for문 -->\r\n");
          out.write("									");
          if (_jspx_meth_c_005fforEach_005f0(_jspx_th_c_005fotherwise_005f0, _jspx_page_context))
            return true;
          out.write("\r\n");
          out.write("									<!-- 상품리스트, newGoodsList for문 -->\r\n");
          out.write("									\r\n");
          out.write("								");
          int evalDoAfterBody = _jspx_th_c_005fotherwise_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fotherwise_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fotherwise.reuse(_jspx_th_c_005fotherwise_005f0);
      _jspx_th_c_005fotherwise_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fotherwise_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fotherwise_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fforEach_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fotherwise_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f0 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    boolean _jspx_th_c_005fforEach_005f0_reused = false;
    try {
      _jspx_th_c_005fforEach_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fotherwise_005f0);
      // /WEB-INF/views/admin/goods/adminGoodsMain.jsp(230,9) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setVar("item");
      // /WEB-INF/views/admin/goods/adminGoodsMain.jsp(230,9) name = items type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setItems(new org.apache.jasper.el.JspValueExpression("/WEB-INF/views/admin/goods/adminGoodsMain.jsp(230,9) '${newGoodsList }'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${newGoodsList }",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      int[] _jspx_push_body_count_c_005fforEach_005f0 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f0 = _jspx_th_c_005fforEach_005f0.doStartTag();
        if (_jspx_eval_c_005fforEach_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n");
            out.write("										<form method=\"post\" enctype=\"multipart/form-data\">\r\n");
            out.write("											<tr>\r\n");
            out.write("\r\n");
            out.write("											<!-- 상품번호 -->\r\n");
            out.write("												<td\r\n");
            out.write("													class=\"table-light p-2 align-middle fw-bold border-end text-center samll\"\r\n");
            out.write("													style=\"width: 45px;\">");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${item.goods_id }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("<input\r\n");
            out.write("													type=\"hidden\" value=\"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${item.goods_id }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\" name=\"goods_id\">\r\n");
            out.write("												</td>\r\n");
            out.write("												<!-- 상품번호 -->\r\n");
            out.write("												\r\n");
            out.write("												<td class=\"border-end align-middle\">\r\n");
            out.write("													<div class=\"d-flex mb-1 align-items-center\">\r\n");
            out.write("														<span style=\"width: 100px;\" class=\"\">카테고리</span>\r\n");
            out.write("\r\n");
            out.write("														<!-- select 선택시 input에 selected value가 공유됨 selectValue() -->\r\n");
            out.write("														<!-- //input값에 따른 selectBox option select 스크립트에 의해 자동선택되 사용자에게 보여줌. -->\r\n");
            out.write("														<select name=\"\" id=\"\"\r\n");
            out.write("															onchange=\"selectValue(this, this.value)\"\r\n");
            out.write("															class=\"form-select rounded-0 flex-inherit text-start small border border-end\">\r\n");
            out.write("															<option value=\"과일\">과일</option>\r\n");
            out.write("															<option value=\"곡류\">곡류</option>\r\n");
            out.write("															<option value=\"채소\">채소</option>\r\n");
            out.write("															<option value=\"버섯\">버섯</option>\r\n");
            out.write("														</select> \r\n");
            out.write("														<!-- 상품 카테고리 표시 -->\r\n");
            out.write("														<input type=\"hidden\" name=\"goods_sort\"\r\n");
            out.write("															id=\"goods_sort\" value=\"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${item.goods_sort }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\">\r\n");
            out.write("														<!-- select 선택시 input에 selected value가 공유됨 selectValue() -->\r\n");
            out.write("\r\n");
            out.write("													</div>\r\n");
            out.write("													<div class=\"d-flex mb-1 align-items-center\">\r\n");
            out.write("														<span style=\"width: 100px;\" class=\"\">상품이름</span> \r\n");
            out.write("														\r\n");
            out.write("														<!-- 상품이름 -->\r\n");
            out.write("														<input\r\n");
            out.write("															class=\"form-control rounded-0\" type=\"text\"\r\n");
            out.write("															placeholder=\"상품이름\" value=\"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${item.goods_title }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write(" \"\r\n");
            out.write("															name=\"goods_title\">\r\n");
            out.write("														<!-- 상품이름 -->\r\n");
            out.write("														\r\n");
            out.write("													</div>\r\n");
            out.write("													<div class=\"d-flex mb-0 align-items-center\">\r\n");
            out.write("														<span style=\"width: 100px;\" class=\"\">상품가격</span> \r\n");
            out.write("														\r\n");
            out.write("														<!-- 상품가격 -->\r\n");
            out.write("														<input\r\n");
            out.write("															class=\"form-control rounded-0\" type=\"text\"\r\n");
            out.write("															placeholder=\"상품가격\" value=\"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${item.goods_price }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\"\r\n");
            out.write("															name=\"goods_price\">\r\n");
            out.write("														<!-- 상품가격 -->\r\n");
            out.write("														\r\n");
            out.write("													</div>\r\n");
            out.write("\r\n");
            out.write("												</td>\r\n");
            out.write("												<td class=\"border-end align-middle\">\r\n");
            out.write("													<div class=\"d-flex mb-1 align-items-center\">\r\n");
            out.write("														<span style=\"width: 100px;\" class=\"\">상품이미지</span>\r\n");
            out.write("														<div class=\"input-group\">\r\n");
            out.write("\r\n");
            out.write("															<!-- 메인 이미지 업로드 -->\r\n");
            out.write("															<!-- filesToFackFilesInput, 본래 file input은 placeholder등을지정할 수 없는 이유로 hidden, -->\r\n");
            out.write("															<!-- label로 연결된 input으로 file value값을 반영해 사용자에게 알림. -->\r\n");
            out.write("															<label onClick=\"filesToFackFilesInput(this)\"\r\n");
            out.write("																class=\"d-flex w-100 filesToFackFilesInput\"> <input\r\n");
            out.write("																name='main_image' class=\"file_real d-none\" type=\"file\"\r\n");
            out.write("																style=\"opacity: .5\"> <span>파일선택</span> \r\n");
            out.write("																\r\n");
            out.write("																<input\r\n");
            out.write("																name='main_image_fake'\r\n");
            out.write("																class=\"file_fake form-control rounded-0\" type=\"text\"\r\n");
            out.write("																value=\"main.png\" placeholder=\"main.png로 변경후 업로드해주세요.\"\r\n");
            out.write("																readonly tabindex=\"-1\">\r\n");
            out.write("															</label>\r\n");
            out.write("															<!-- label로 연결된 input으로 file value값을 반영해 사용자에게 알림. -->\r\n");
            out.write("															<!-- 메인 이미지 업로드 -->\r\n");
            out.write("\r\n");
            out.write("\r\n");
            out.write("\r\n");
            out.write("														</div>\r\n");
            out.write("													</div>\r\n");
            out.write("													<div class=\"d-flex mb-1 align-items-center\">\r\n");
            out.write("														<span style=\"width: 100px;\" class=\"\">상세이미지</span>\r\n");
            out.write("														<div class=\"input-group\">\r\n");
            out.write("\r\n");
            out.write("															<!-- 상세 이미지 업로드 -->\r\n");
            out.write("															<!-- filesToFackFilesInput, 본래 file input은 placeholder등을지정할 수 없는 이유로 hidden, -->\r\n");
            out.write("															<!-- label로 연결된 input으로 file value값을 반영해 사용자에게 알림. -->\r\n");
            out.write("															<label onClick=\"filesToFackFilesInput(this)\"\r\n");
            out.write("																class=\"d-flex w-100 filesToFackFilesInput\"> <input\r\n");
            out.write("																name='detail_image1' class=\"file_real d-none\"\r\n");
            out.write("																type=\"file\" style=\"opacity: .5\"> <span>파일선택</span>\r\n");
            out.write("\r\n");
            out.write("																<input name='detail_image1_fake'\r\n");
            out.write("																class=\"file_fake form-control rounded-0\" type=\"text\"\r\n");
            out.write("																value=\"detail1.png\"\r\n");
            out.write("																placeholder=\"detail1.png로 변경후 업로드해주세요.\" readonly\r\n");
            out.write("																tabindex=\"-1\">\r\n");
            out.write("															</label>\r\n");
            out.write("															<!-- label로 연결된 input으로 file value값을 반영해 사용자에게 알림. -->\r\n");
            out.write("															<!-- 상세 이미지 업로드 -->\r\n");
            out.write("\r\n");
            out.write("\r\n");
            out.write("														</div>\r\n");
            out.write("													</div>\r\n");
            out.write("													<div class=\"d-flex mb-0 align-items-center\">\r\n");
            out.write("														<span style=\"width: 100px;\" class=\"\"></span>\r\n");
            out.write("														<div class=\"input-group\">\r\n");
            out.write("\r\n");
            out.write("															<!-- 상세 이미지 업로드 -->\r\n");
            out.write("															<!-- filesToFackFilesInput, 본래 file input은 placeholder등을지정할 수 없는 이유로 hidden, -->\r\n");
            out.write("															<!-- label로 연결된 input으로 file value값을 반영해 사용자에게 알림. -->\r\n");
            out.write("															<label onClick=\"filesToFackFilesInput(this)\"\r\n");
            out.write("																class=\"d-flex w-100 filesToFackFilesInput\"> <input\r\n");
            out.write("																name='detail_image2' class=\"file_real d-none\"\r\n");
            out.write("																type=\"file\" style=\"opacity: .5\"> <span>파일선택</span>\r\n");
            out.write("\r\n");
            out.write("																<input name='detail_image2_fake'\r\n");
            out.write("																class=\"file_fake form-control rounded-0\" type=\"text\"\r\n");
            out.write("																value=\"detail2.png\"\r\n");
            out.write("																placeholder=\"detail2.png로 변경후 업로드해주세요.\" readonly\r\n");
            out.write("																tabindex=\"-1\">\r\n");
            out.write("															</label>\r\n");
            out.write("															<!-- label로 연결된 input으로 file value값을 반영해 사용자에게 알림. -->\r\n");
            out.write("															<!-- 상세 이미지 업로드 -->\r\n");
            out.write("\r\n");
            out.write("														</div>\r\n");
            out.write("													</div>\r\n");
            out.write("												</td>\r\n");
            out.write("												\r\n");
            out.write("												<!-- 등록일 -->\r\n");
            out.write("												<td class=\"border-end align-middle text-center\">");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${item.goods_credate }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</td>\r\n");
            out.write("												<!-- 등록일 -->\r\n");
            out.write("\r\n");
            out.write("												<td class=\"align-middle\">\r\n");
            out.write("													<!-- 수정 -->\r\n");
            out.write("													<button\r\n");
            out.write("														class=\"w-100 btn border-main small rounded-0 samll mb-2\"\r\n");
            out.write("														type=\"submit\"\r\n");
            out.write("														formaction=\"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("/admin/goods/modifyGoods.do?goods_id=");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${item.goods_id }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\">수정</button>\r\n");
            out.write("													<!-- 수정 --> <!-- 삭제 -->\r\n");
            out.write("													<button href=\"https://www.naver.com\"\r\n");
            out.write("														class=\"w-100 btn border-main small rounded-0 samll mb-0\"\r\n");
            out.write("														onClick=\"deleteGoods(");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${item.goods_id}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write(")\" type=\"button\">삭제</button>\r\n");
            out.write("													<!-- 삭제 -->\r\n");
            out.write("\r\n");
            out.write("												</td>\r\n");
            out.write("											</tr>\r\n");
            out.write("										</form>\r\n");
            out.write("									");
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f0.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f0[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f0.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f0.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f0);
      _jspx_th_c_005fforEach_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fforEach_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fforEach_005f0_reused);
    }
    return false;
  }
}
